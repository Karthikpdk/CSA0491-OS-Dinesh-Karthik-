#include <stdio.h>
#include <stdlib.h>

#define MAX_REQUESTS 100
#define MAX_TRACKS 1000

// Function to sort disk requests in ascending order
void sortRequests(int *requests, int num_requests) {
    for (int i = 0; i < num_requests - 1; i++) {
        for (int j = 0; j < num_requests - i - 1; j++) {
            if (requests[j] > requests[j + 1]) {
                int temp = requests[j];
                requests[j] = requests[j + 1];
                requests[j + 1] = temp;
            }
        }
    }
}

// Function to simulate C-SCAN algorithm
int simulateCSCAN(int initial_head, int *requests, int num_requests, int max_track) {
    int total_head_movements = 0;

    // Sort requests in ascending order
    sortRequests(requests, num_requests);

    int current_track = initial_head;

    // Move towards higher tracks
    for (int i = 0; i < num_requests; i++) {
        if (requests[i] >= current_track) {
            total_head_movements += abs(requests[i] - current_track);
            current_track = requests[i];
        }
    }

    // Move to the lowest-numbered track
    total_head_movements += max_track - current_track;

    // Move towards higher tracks again (circular)
    total_head_movements += max_track;

    return total_head_movements;
}

int main() {
    int requests[MAX_REQUESTS];
    int num_requests;
    int initial_head;
    int max_track;

    // Read initial head position from the user
    printf("Enter initial head position: ");
    scanf("%d", &initial_head);

    // Read number of requests from the user
    printf("Enter number of requests: ");
    scanf("%d", &num_requests);

    // Read disk requests from the user
    printf("Enter disk requests: ");
    for (int i = 0; i < num_requests; i++) {
        scanf("%d", &requests[i]);
    }

    // Read the maximum track from the user
    printf("Enter the maximum track: ");
    scanf("%d", &max_track);

    // Simulate C-SCAN algorithm
    int total_head_movements = simulateCSCAN(initial_head, requests, num_requests, max_track);

    // Print the total head movements
    printf("Total head movements using C-SCAN: %d\n", total_head_movements);

    return 0;
}

